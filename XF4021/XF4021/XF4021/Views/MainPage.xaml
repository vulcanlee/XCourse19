<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="XF4021.Views.MainPage"
             xmlns:local="clr-namespace:XF4021.Converters"
             xmlns:triggers="clr-namespace:XF4021.Triggers"
             Title="觸發 Trigger">

    <!--Trigger 可以讓您在 XAML 中，定義各種不同條件，當條件滿足之後，將會做出各種反應-->

    <ContentPage.Resources>
        <ResourceDictionary>
            <local:MultiTriggerConverter x:Key="dataHasBeenEntered" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <StackLayout HorizontalOptions="Center" VerticalOptions="Center">
        <!--這裡展示屬性觸發的用法，當所指定的屬性值其條件滿足時候，所指定的屬性將會變更其屬性值-->
        <Label Text="屬性觸發 Property Trigger" TextColor="Blue"/>
        <Entry Placeholder="請輸入名稱" FontSize="14">
            <Entry.Triggers>
                <Trigger TargetType="Entry" Property="IsFocused" Value="True" >
                    <Setter Property="BackgroundColor" Value="Black" />
                    <Setter Property="PlaceholderColor" Value="Yellow" />
                    <Setter Property="TextColor" Value="White" />
                </Trigger>
            </Entry.Triggers>
        </Entry>

        <!--這裡展示資料觸發的用法，當資料繫結所綁定的屬性條件滿足的時候，就可以變更相關屬性值-->
        <Label Text="資料觸發 Data Trigger"/>
        <!-- 提示: 確定 Text="" 需要有預設值，否則，會以問題 -->
        <Entry x:Name="entry" Text="" Placeholder="這個欄位需要輸入" 
                FontSize="14" TextColor="Blue" />
        <Button Text="儲存" HorizontalOptions="Center">
            <Button.Triggers>
                <DataTrigger TargetType="Button"
                     Binding="{Binding Source={x:Reference entry},
                                       Path=Text.Length}" Value="0">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Button.Triggers>
        </Button>

        <!--這裡展示事件觸發的用法，當所指定的事件發生的時候，就會觸發所指定的 TriggerAction<T>類別內的方法-->
        <Label Text="事件觸發 Event Trigger" TextColor="Blue"/>
        <Entry Placeholder="請輸入名稱" FontSize="14">
            <Entry.Triggers>
                <EventTrigger Event="TextChanged">
                    <!--可以執行您自動的任何程式碼-->
                    <triggers:NumericValidationTriggerAction />
                </EventTrigger>
            </Entry.Triggers>
        </Entry>

        <!--這裡展示多重觸發的用法，當所指定的條件都滿足的時候，就會觸發所指定的屬性值-->
        <!--這裡為什麼無法做到兩個同時都要輸入，才能夠觸發呢?-->
        <Label Text="多重觸發 Multi Trigger(任一有輸入)" TextColor="Blue"/>
        <Entry x:Name="user" Text="" Placeholder="請輸入使用者名稱" FontSize="14" />
        <Entry x:Name="pwd" Text="" Placeholder="請輸入密碼" IsPassword="True" FontSize="14" />
        <Button x:Name="loginButton" Text="Login"
                HorizontalOptions="Center" >
            <Button.Triggers>
                <MultiTrigger TargetType="Button">
                    <MultiTrigger.Conditions>
                        <BindingCondition Binding="{Binding Source={x:Reference user},
                                   Path=Text.Length}" Value="0" />
                        <BindingCondition Binding="{Binding Source={x:Reference pwd},
                                   Path=Text.Length}" Value="0" />
                    </MultiTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="False" />
                </MultiTrigger>
            </Button.Triggers>
        </Button>

        <!--這裡展示多重觸發的用法，當所指定的條件都滿足的時候，就會觸發所指定的屬性值-->
        <!--這裡需要兩個文字輸入盒同時都要有輸入，按鈕才會啟用-->
        <Label Text="多重觸發 Multi Trigger(都要有輸入)" TextColor="Blue"/>
        <Entry x:Name="user1" Text="" Placeholder="請輸入使用者名稱" FontSize="14" />
        <Entry x:Name="pwd1" Text="" Placeholder="請輸入密碼" IsPassword="True" FontSize="14" />
        <Button x:Name="login1Button" Text="Login"
		        FontSize="Large"
		        HorizontalOptions="Center"
		        IsEnabled="false">

            <Button.Triggers>
                <MultiTrigger TargetType="Button">
                    <MultiTrigger.Conditions>
                        <BindingCondition Binding="{Binding Source={x:Reference user1},
		                                       Path=Text.Length,
		                                       Converter={StaticResource dataHasBeenEntered}}"
		                                   Value="true" />
                        <BindingCondition Binding="{Binding Source={x:Reference pwd1},
		                                       Path=Text.Length,
		                                       Converter={StaticResource dataHasBeenEntered}}"
		                                   Value="true" />
                    </MultiTrigger.Conditions>

                    <Setter Property="IsEnabled" Value="True" />
                </MultiTrigger>
            </Button.Triggers>
        </Button>
    </StackLayout>
</ContentPage>